{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iEAAe,aAAa,EAAC;;;;;;;;;;;;;;;AClC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;;AAEA,iEAAe,uBAAuB,EAAC;;;;;;;;;;;;;;;;ACrBvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;;;;;;;UC1CA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACN4C;AACgB;AACE;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,0DAAa;AACpC;AACA;AACA;AACA;AACA,QAAQ,gEAAO;AACf,QAAQ,kEAAS;AACjB;AACA,IAAI,gEAAuB;AAC3B;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,kEAAS;AACb,IAAI,gEAAuB;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,IAAI,kEAAS;AACb,IAAI,gEAAuB;AAC3B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kEAAS;AACb,IAAI,gEAAO;AACX,IAAI,gEAAuB;AAC3B;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,gEAAO;AACX,IAAI,kEAAS;AACb,IAAI,gEAAuB;AAC3B;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB,gEAAO;AACvB,gBAAgB,kEAAS;AACzB,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,gBAAgB,gEAAO;AACvB,gBAAgB,kEAAS;AACzB,cAAc;AACd;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,gEAAO;AACf,QAAQ,kEAAS;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA","sources":["webpack://npm-start/./js/createTask.js","webpack://npm-start/./js/saveLocalStorage.js","webpack://npm-start/./js/showBarAnditemsLeft.js","webpack://npm-start/webpack/bootstrap","webpack://npm-start/webpack/runtime/define property getters","webpack://npm-start/webpack/runtime/hasOwnProperty shorthand","webpack://npm-start/webpack/runtime/make namespace object","webpack://npm-start/./js/main.js"],"sourcesContent":["const createNewTask = (taskString) => {\n    let listItem = document.createElement('li');\n    let checkBox = document.createElement('input');\n    let label = document.createElement('label');\n    label.dataset.action = 'edit';\n\n    let changeInput = document.createElement('textarea');\n    let buttonDelete = document.createElement('button');\n\n    label.textContent = taskString;\n\n    checkBox.type = 'checkbox';\n    checkBox.dataset.action = 'done';\n    changeInput.dataset.action = 'editTask';\n\n    buttonDelete.innerHTML = `<svg class=\"task-list__delete-img delete-img\" fill=\"#d2691e\" width=\"20px\" height=\"20px\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0 14.545L1.455 16 8 9.455 14.545 16 16 14.545 9.455 8 16 1.455 14.545 0 8 6.545 1.455 0 0 1.455 6.545 8z\" fill-rule=\"evenodd\"/>\n    </svg>`;\n    buttonDelete.classList.add('task-list__delete');\n    buttonDelete.dataset.action = 'delete';\n    listItem.className = 'task-list__list-item list-item';\n\n    changeInput.className = 'task-list__edit-text edit-text';\n    checkBox.className = 'task-list__custom-button custom-button';\n    label.className = 'task-list__task-text task-text task-text_done';\n\n    listItem.append(checkBox);\n    listItem.append(label);\n    listItem.append(changeInput);\n    listItem.append(buttonDelete);\n\n    return listItem;\n};\n\nexport default createNewTask;\n","const taskList = document.querySelector('.task-list');\nconst filterAllButton = document.querySelector('#filterAll');\nconst filterActiveButton = document.querySelector('#filterActive');\nconst filterCompletedButton = document.querySelector('#filterCompleted');\n\nconst saveTasksToLocalStorage = () => {\n    const tasks = taskList.innerHTML;\n    localStorage.setItem('tasks', tasks);\n};\n\nif (localStorage.getItem('filterState') === 'active') {\n    taskList.innerHTML = localStorage.getItem('tasks');\n    filterActiveButton.click();\n} else if (localStorage.getItem('filterState') === 'completed') {\n    taskList.innerHTML = localStorage.getItem('tasks');\n    filterCompletedButton.click();\n} else if (localStorage.getItem('filterState') === 'all') {\n    taskList.innerHTML = localStorage.getItem('tasks');\n    filterAllButton.click();\n}\n\nexport default saveTasksToLocalStorage;\n","const bottomPanel = document.querySelector('.bottom-panel');\nconst filterAllButton = document.querySelector('#filterAll');\nconst filterActiveButton = document.querySelector('#filterActive');\nconst filterCompletedButton = document.querySelector('#filterCompleted');\nconst checkAllcheckbox = document.querySelector('.check-all-task__custom-button');\n\nconst showBar = () => {\n    let listItem = document.querySelectorAll('.task-list__list-item');\n    let checkAllTask = document.querySelector('.check-all-task');\n\n    if (listItem.length !== 0) {\n        bottomPanel.classList.add('bottom-panel_show');\n        checkAllTask.classList.add('check-all-task_show');\n    } else if (listItem.length === 0) {\n        bottomPanel.classList.remove('bottom-panel_show');\n        filterAllButton.classList.remove('bottom-panel__button_active');\n        filterActiveButton.classList.remove('bottom-panel__button_active');\n        filterCompletedButton.classList.remove('bottom-panel__button_active');\n        checkAllTask.classList.remove('check-all-task_show');\n    } else {\n        bottomPanel.classList.remove('bottom-panel_show');\n        checkAllTask.classList.remove('check-all-task_show');\n    }\n};\n\nconst itemsLeft = () => {\n    let numberOfTask = document.querySelector('.number_of_tasks');\n    let labelDone = document.querySelectorAll('.list-item');\n    let labelNotDone = document.querySelectorAll('.list-item:not(.list-item_done)');\n    let clear = document.querySelector('.bottom-panel__button_clear');\n\n    numberOfTask.innerHTML = labelNotDone.length;\n\n    if (labelDone.length === 0) {\n        clear.classList.remove('bottom-panel__button_clear_show');\n    } else if (labelNotDone.length === 0) {\n        checkAllcheckbox.checked === true;\n        clear.classList.add('bottom-panel__button_clear_show');\n    } else {\n        clear.classList.add('bottom-panel__button_clear_show');\n        checkAllcheckbox.checked === false;\n    }\n};\n\nexport { showBar, itemsLeft};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import createNewTask from './createTask.js';\nimport saveTasksToLocalStorage from './saveLocalStorage.js';\nimport { showBar, itemsLeft } from './showBarAnditemsLeft.js';\n\nconst formGroup = document.querySelector('.form-group');\nconst taskInput = document.querySelector('.form-group__task-input');\nconst taskList = document.querySelector('.task-list');\nconst checkAllcheckbox = document.querySelector('.check-all-task__custom-button');\nconst filterAllButton = document.querySelector('#filterAll');\nconst filterActiveButton = document.querySelector('#filterActive');\nconst filterCompletedButton = document.querySelector('#filterCompleted');\nfilterAllButton.classList.add('bottom-panel__button_active');\n\nconst newTask = (event) => {\n    event.preventDefault();\n\n    if (taskInput.value.trim() !== '') {\n        let checkAllTask = document.querySelector('.check-all-task');\n        let listItem = createNewTask(taskInput.value);\n        taskList.prepend(listItem);\n        checkAllTask.classList.add('check-all-task_show');\n        editButton(listItem);\n        taskInput.value = '';\n        showBar();\n        itemsLeft();\n    }\n    saveTasksToLocalStorage();\n};\n\nformGroup.addEventListener('submit', (event) => newTask(event));\n\n//done Task\n\ntaskList.addEventListener('click', (event) => doneTask(event));\n\nconst doneTask = (event) => {\n    if (event.target.dataset.action === 'done') {\n        let listItem = event.target.closest('.list-item');\n        listItem.classList.toggle('list-item_done');\n    }\n    itemsLeft();\n    saveTasksToLocalStorage();\n};\n\n// eslint-disable-next-line no-unused-vars\n\nconst checkAllTasks = (event) => {\n    const checkBoxAll = document.querySelectorAll('.custom-button');\n    if (checkBoxAll) {\n        if (event.checked === true) {\n            checkBoxAll.forEach((checkAll) => checkAll.parentNode.classList.add('list-item_done'));\n        } else if (event.checked === false) {\n            checkBoxAll.forEach((checkAll) =>\n                checkAll.parentNode.classList.remove('list-item_done'),\n            );\n        }\n    }\n    itemsLeft();\n    saveTasksToLocalStorage();\n};\n\ncheckAllcheckbox.addEventListener('change', (event) => checkAllTasks(checkAllcheckbox));\n\n//delete Task\nconst deleteTask = (event) => {\n    if (event.target.dataset.action === 'delete') {\n        let listItem = event.target.closest('.task-list__list-item');\n        listItem.remove();\n    }\n    itemsLeft();\n    showBar();\n    saveTasksToLocalStorage();\n};\n\ntaskList.addEventListener('click', (event) => deleteTask(event));\n\n//filterAll\n\nconst filterAll = () => {\n    let listItem = document.querySelector('.task-list');\n\n    if (listItem.children.length > 0) {\n        listItem.classList.remove('task-list_show-completed-tasks');\n        listItem.classList.remove('task-list_show-active-tasks');\n        filterAllButton.classList.add('bottom-panel__button_active');\n        filterActiveButton.classList.remove('bottom-panel__button_active');\n        filterCompletedButton.classList.remove('bottom-panel__button_active');\n        localStorage.setItem('filterState', 'all');\n    }\n};\n\nfilterAllButton.onclick = filterAll;\n\n//filterActive\nconst filterActive = () => {\n    let listItem = document.querySelector('.task-list');\n\n    if (listItem.children.length > 0) {\n        listItem.classList.remove('task-list_show-completed-tasks');\n        listItem.classList.add('task-list_show-active-tasks');\n        filterAllButton.classList.remove('bottom-panel__button_active');\n        filterActiveButton.classList.add('bottom-panel__button_active');\n        filterCompletedButton.classList.remove('bottom-panel__button_active');\n        localStorage.setItem('filterState', 'active');\n    }\n};\n\nfilterActiveButton.onclick = filterActive;\n\n//filterCompleted\nconst filterCompleted = () => {\n    let listItem = document.querySelector('.task-list');\n\n    if (listItem.children.length > 0) {\n        listItem.classList.add('task-list_show-completed-tasks');\n        listItem.classList.remove('task-list_show-active-tasks');\n        filterAllButton.classList.remove('bottom-panel__button_active');\n        filterActiveButton.classList.remove('bottom-panel__button_active');\n        filterCompletedButton.classList.add('bottom-panel__button_active');\n        localStorage.setItem('filterState', 'completed');\n    }\n};\n\nfilterCompletedButton.onclick = filterCompleted;\n\n//clearAllTask\nconst clearButton = document.querySelector('.bottom-panel__button_clear');\n\nconst clearAll = () => {\n    let listItem = document.querySelectorAll('.list-item_done');\n    if (listItem) {\n        listItem.forEach((task) => task.remove());\n    }\n    showBar();\n    itemsLeft();\n    saveTasksToLocalStorage();\n};\n\nclearButton.onclick = clearAll;\n\n//editATask\n\nconst editATask = function () {\n    let listItem = this.parentNode;\n    let editInput = listItem.querySelector('textarea');\n    let label = listItem.querySelector('.task-list__task-text');\n    let containsClass = listItem.classList.contains('list-item_edit-mode');\n    window.addEventListener('dblclick', function () {\n        editInput.focus();\n    });\n\n    if (containsClass) {\n        label.innerText = editInput.value;\n    } else {\n        editInput.value = label.innerText;\n    }\n\n    window.addEventListener('keypress', function (event) {\n        if (event.key === 'Enter') {\n            listItem.classList.remove('list-item_edit-mode');\n            label.innerText = editInput.value;\n        }\n    });\n\n    window.addEventListener('keypress', function (event) {\n        if (event.key === 'Enter') {\n            if (editInput.value === '') {\n                listItem.remove();\n                showBar();\n                itemsLeft();\n            } else {\n                label.innerText = editInput.value;\n            }\n            listItem.classList.remove('list-item_edit-mode');\n        }\n    });\n\n    window.addEventListener('keyup', function (event) {\n        if (event.key === 'Escape') {\n            listItem.classList.remove('list-item_edit-mode');\n            editInput.value = label.innerText;\n        }\n    });\n\n    window.addEventListener('click', function (event) {\n        if (event.target !== editInput) {\n            if (editInput.value === '') {\n                listItem.remove();\n                showBar();\n                itemsLeft();\n            } else {\n                label.innerText = editInput.value;\n            }\n            listItem.classList.remove('list-item_edit-mode');\n        }\n    });\n\n    listItem.classList.toggle('list-item_edit-mode');\n};\n\nconst editButton = (taskListItem) => {\n    let editing = taskListItem.querySelector('.task-list__task-text');\n    editing.ondblclick = editATask;\n};\n\nconst saveTaskList = () => {\n    if (localStorage.getItem('tasks')) {\n        taskList.innerHTML = localStorage.getItem('tasks');\n        showBar();\n        itemsLeft();\n        const taskItems = document.querySelectorAll('.task-list__list-item');\n        taskItems.forEach((taskItem) => {\n            editButton(taskItem);\n        });\n    }\n};\nwindow.addEventListener('DOMContentLoaded', saveTaskList);\n"],"names":[],"sourceRoot":""}